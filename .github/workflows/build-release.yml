name: Build Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/build-release.yml"
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/build-release.yml"
  # workflow_run:
  #   workflows: [Build Docker Image]
  #   types:
  #     - completed

env:
  # https://github.com/grafana/loki/releases
  LOKI_VERSION: 2.5.0
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Prepare env
        run: |
          sudo apt-get update \
          && sudo apt-get install -y --no-install-recommends \
              libsystemd-dev \

      - name: Build
        run: |
          curl -sfLO https://github.com/grafana/loki/archive/refs/tags/v$LOKI_VERSION.zip
          unzip -q v$LOKI_VERSION.zip
          ls -alh

          docker run --rm \
            --platform linux/arm64 \
            -v $PWD/loki-$LOKI_VERSION:/usr/src/myapp \
            -w /usr/src/myapp \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            make BUILD_IN_CONTAINER=false promtail

      - name: Check
        run: |
          pwd
          ls -alh
          ls -alh $PWD/loki-$LOKI_VERSION

      # - name: Log in to the GitHub Container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     flavor: |
      #       latest=true

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     # platforms: linux/amd64,linux/arm64
      #     platforms: linux/arm64
      #     push: false
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

  # container-test-job:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: arm64v8/golang:1.17.11-bullseye
  #     # env:
  #     #   NODE_ENV: development
  #     # ports:
  #     #   - 80
  #     # volumes:
  #     #   - my_docker_volume:/volume_mount
  #     options: --platform linux/arm64
  #   steps:
  #     - name: Check for arch
  #       run: |
  #         arch

  #     - name: Upload bin directory
  #       uses: actions/upload-artifact@main
  #       if: steps.build.outcome == 'success'
  #       with:
  #         name: promtail
  #         path: promtail
